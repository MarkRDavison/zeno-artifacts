// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using Zeno.Artifacts.Shared.Client.My.Bank;
using Zeno.Artifacts.Shared.Client.My.Change_password;
using Zeno.Artifacts.Shared.Client.My.Characters;
using Zeno.Artifacts.Shared.Client.My.Details;
using Zeno.Artifacts.Shared.Client.My.Grandexchange;
using Zeno.Artifacts.Shared.Client.My.Item;
using Zeno.Artifacts.Shared.Client.My.Logs;
namespace Zeno.Artifacts.Shared.Client.My
{
    /// <summary>
    /// Builds and executes requests for operations under \my
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class MyRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The bank property</summary>
        public global::Zeno.Artifacts.Shared.Client.My.Bank.BankRequestBuilder Bank
        {
            get => new global::Zeno.Artifacts.Shared.Client.My.Bank.BankRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The change_password property</summary>
        public global::Zeno.Artifacts.Shared.Client.My.Change_password.Change_passwordRequestBuilder Change_password
        {
            get => new global::Zeno.Artifacts.Shared.Client.My.Change_password.Change_passwordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The characters property</summary>
        public global::Zeno.Artifacts.Shared.Client.My.Characters.CharactersRequestBuilder Characters
        {
            get => new global::Zeno.Artifacts.Shared.Client.My.Characters.CharactersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The details property</summary>
        public global::Zeno.Artifacts.Shared.Client.My.Details.DetailsRequestBuilder Details
        {
            get => new global::Zeno.Artifacts.Shared.Client.My.Details.DetailsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The grandexchange property</summary>
        public global::Zeno.Artifacts.Shared.Client.My.Grandexchange.GrandexchangeRequestBuilder Grandexchange
        {
            get => new global::Zeno.Artifacts.Shared.Client.My.Grandexchange.GrandexchangeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The logs property</summary>
        public global::Zeno.Artifacts.Shared.Client.My.Logs.LogsRequestBuilder Logs
        {
            get => new global::Zeno.Artifacts.Shared.Client.My.Logs.LogsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the zeno.artifacts.shared.client.my.item collection</summary>
        /// <param name="position">Name of your character.</param>
        /// <returns>A <see cref="global::Zeno.Artifacts.Shared.Client.My.Item.WithNameItemRequestBuilder"/></returns>
        public global::Zeno.Artifacts.Shared.Client.My.Item.WithNameItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("name", position);
                return new global::Zeno.Artifacts.Shared.Client.My.Item.WithNameItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Zeno.Artifacts.Shared.Client.My.MyRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MyRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/my", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Zeno.Artifacts.Shared.Client.My.MyRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MyRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/my", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
