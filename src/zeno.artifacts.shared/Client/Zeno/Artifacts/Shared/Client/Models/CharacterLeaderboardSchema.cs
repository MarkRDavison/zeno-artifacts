// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Zeno.Artifacts.Shared.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CharacterLeaderboardSchema : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Account name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Account { get; set; }
#nullable restore
#else
        public string Account { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Alchemy level.</summary>
        public int? AlchemyLevel { get; set; }
        /// <summary>Alchemy total xp.</summary>
        public int? AlchemyTotalXp { get; set; }
        /// <summary>Cooking level.</summary>
        public int? CookingLevel { get; set; }
        /// <summary>Cooking total xp.</summary>
        public int? CookingTotalXp { get; set; }
        /// <summary>Fishing level.</summary>
        public int? FishingLevel { get; set; }
        /// <summary>Fishing total xp.</summary>
        public int? FishingTotalXp { get; set; }
        /// <summary>Gearcrafting level.</summary>
        public int? GearcraftingLevel { get; set; }
        /// <summary>Gearcrafting total xp.</summary>
        public int? GearcraftingTotalXp { get; set; }
        /// <summary>The numbers of gold on this character.</summary>
        public int? Gold { get; set; }
        /// <summary>Jewelrycrafting level.</summary>
        public int? JewelrycraftingLevel { get; set; }
        /// <summary>Jewelrycrafting total xp.</summary>
        public int? JewelrycraftingTotalXp { get; set; }
        /// <summary>Combat level.</summary>
        public int? Level { get; set; }
        /// <summary>Mining level.</summary>
        public int? MiningLevel { get; set; }
        /// <summary>Mining total xp.</summary>
        public int? MiningTotalXp { get; set; }
        /// <summary>Character name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Position in the leaderboard.</summary>
        public int? Position { get; set; }
        /// <summary>Character skin code.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Skin { get; set; }
#nullable restore
#else
        public string Skin { get; set; }
#endif
        /// <summary>Member status.</summary>
        public global::Zeno.Artifacts.Shared.Client.Models.AccountStatus? Status { get; set; }
        /// <summary>Total XP of your character.</summary>
        public int? TotalXp { get; set; }
        /// <summary>Weaponcrafting level.</summary>
        public int? WeaponcraftingLevel { get; set; }
        /// <summary>Weaponcrafting total xp.</summary>
        public int? WeaponcraftingTotalXp { get; set; }
        /// <summary>Woodcutting level.</summary>
        public int? WoodcuttingLevel { get; set; }
        /// <summary>Woodcutting total xp.</summary>
        public int? WoodcuttingTotalXp { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Zeno.Artifacts.Shared.Client.Models.CharacterLeaderboardSchema"/> and sets the default values.
        /// </summary>
        public CharacterLeaderboardSchema()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Zeno.Artifacts.Shared.Client.Models.CharacterLeaderboardSchema"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Zeno.Artifacts.Shared.Client.Models.CharacterLeaderboardSchema CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Zeno.Artifacts.Shared.Client.Models.CharacterLeaderboardSchema();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account", n => { Account = n.GetStringValue(); } },
                { "alchemy_level", n => { AlchemyLevel = n.GetIntValue(); } },
                { "alchemy_total_xp", n => { AlchemyTotalXp = n.GetIntValue(); } },
                { "cooking_level", n => { CookingLevel = n.GetIntValue(); } },
                { "cooking_total_xp", n => { CookingTotalXp = n.GetIntValue(); } },
                { "fishing_level", n => { FishingLevel = n.GetIntValue(); } },
                { "fishing_total_xp", n => { FishingTotalXp = n.GetIntValue(); } },
                { "gearcrafting_level", n => { GearcraftingLevel = n.GetIntValue(); } },
                { "gearcrafting_total_xp", n => { GearcraftingTotalXp = n.GetIntValue(); } },
                { "gold", n => { Gold = n.GetIntValue(); } },
                { "jewelrycrafting_level", n => { JewelrycraftingLevel = n.GetIntValue(); } },
                { "jewelrycrafting_total_xp", n => { JewelrycraftingTotalXp = n.GetIntValue(); } },
                { "level", n => { Level = n.GetIntValue(); } },
                { "mining_level", n => { MiningLevel = n.GetIntValue(); } },
                { "mining_total_xp", n => { MiningTotalXp = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "position", n => { Position = n.GetIntValue(); } },
                { "skin", n => { Skin = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Zeno.Artifacts.Shared.Client.Models.AccountStatus>(); } },
                { "total_xp", n => { TotalXp = n.GetIntValue(); } },
                { "weaponcrafting_level", n => { WeaponcraftingLevel = n.GetIntValue(); } },
                { "weaponcrafting_total_xp", n => { WeaponcraftingTotalXp = n.GetIntValue(); } },
                { "woodcutting_level", n => { WoodcuttingLevel = n.GetIntValue(); } },
                { "woodcutting_total_xp", n => { WoodcuttingTotalXp = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account", Account);
            writer.WriteIntValue("alchemy_level", AlchemyLevel);
            writer.WriteIntValue("alchemy_total_xp", AlchemyTotalXp);
            writer.WriteIntValue("cooking_level", CookingLevel);
            writer.WriteIntValue("cooking_total_xp", CookingTotalXp);
            writer.WriteIntValue("fishing_level", FishingLevel);
            writer.WriteIntValue("fishing_total_xp", FishingTotalXp);
            writer.WriteIntValue("gearcrafting_level", GearcraftingLevel);
            writer.WriteIntValue("gearcrafting_total_xp", GearcraftingTotalXp);
            writer.WriteIntValue("gold", Gold);
            writer.WriteIntValue("jewelrycrafting_level", JewelrycraftingLevel);
            writer.WriteIntValue("jewelrycrafting_total_xp", JewelrycraftingTotalXp);
            writer.WriteIntValue("level", Level);
            writer.WriteIntValue("mining_level", MiningLevel);
            writer.WriteIntValue("mining_total_xp", MiningTotalXp);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("position", Position);
            writer.WriteStringValue("skin", Skin);
            writer.WriteEnumValue<global::Zeno.Artifacts.Shared.Client.Models.AccountStatus>("status", Status);
            writer.WriteIntValue("total_xp", TotalXp);
            writer.WriteIntValue("weaponcrafting_level", WeaponcraftingLevel);
            writer.WriteIntValue("weaponcrafting_total_xp", WeaponcraftingTotalXp);
            writer.WriteIntValue("woodcutting_level", WoodcuttingLevel);
            writer.WriteIntValue("woodcutting_total_xp", WoodcuttingTotalXp);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
